//
//  MapViewController.swift
//  Base Project
//
//  Created by Saminos on 08/06/17.
//  Copyright (c) 2017 Flipbox. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so you can apply
//  clean architecture to your iOS and Mac projects, see http://clean-swift.com
//

import UIKit
import MapKit

protocol MapViewControllerInterface
{
  func displaySomething(viewModel: Map.Something.ViewModel)
}

class MapViewController: UIViewController, MapViewControllerInterface
{
  var output: MapInteractorInterface!
  var router: MapRouter!
  
  @IBOutlet weak var mapView: MKMapView!
  @IBOutlet weak var infoTextView: UITextView!
  // MARK: - Object lifecycle
  
  override func awakeFromNib()
  {
    super.awakeFromNib()
    MapConfigurator.sharedInstance.configure(viewController: self)
  }
  
  // MARK: - View lifecycle
  
  override func viewDidLoad()
  {
    super.viewDidLoad()
    settingProperty()
  }
  
  // MARK: - Event handling
  
  func settingProperty() {
    let button = MKUserTrackingBarButtonItem(mapView: mapView)
    navigationItem.rightBarButtonItem = button
    mapView.delegate = self
  }
  
  func doSomethingOnLoad()
  {
    // NOTE: Ask the Interactor to do some work
    
    let request = Map.Something.Request()
    output.doSomething(request: request)
  }
  
  // MARK: - Display logic
  
  func displaySomething(viewModel: Map.Something.ViewModel)
  {
    // NOTE: Display the result from the Presenter
    
    // nameTextField.text = viewModel.name
  }
}

extension MapViewController:MKMapViewDelegate {
  func mapView(_ mapView: MKMapView, didUpdate userLocation: MKUserLocation) {
    guard let location = userLocation.location else {
      return
    }
    let geocoder = CLGeocoder()
    geocoder.reverseGeocodeLocation(location) { placemarks, error in
      
      if let addressDictionary = placemarks?.first?.addressDictionary, let street = addressDictionary["Street"] as? String {
        print(street)
        
      }
    }
    
  }
}

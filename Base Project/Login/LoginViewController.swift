//
//  LoginViewController.swift
//  Base Project
//
//  Created by Saminos on 07/06/17.
//  Copyright (c) 2017 Flipbox. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so you can apply
//  clean architecture to your iOS and Mac projects, see http://clean-swift.com


import UIKit

protocol LoginViewControllerInterface
{
  func displayFetchedUser(viewModel: Login.FetchUser.ViewModel)
}

class LoginViewController: UIViewController, LoginViewControllerInterface
{
    
    @IBOutlet weak var emailField: UITextField!
    
    @IBOutlet weak var passwordField: UITextField!
    var output: LoginInteractorInterface!
    var router: LoginRouter!
  
  // MARK: - Object lifecycle
  
  override func awakeFromNib()
  {
    super.awakeFromNib()
    
    LoginConfigurator.sharedInstance.configure(viewController: self)
  }
  
  // MARK: - View lifecycle
  
  override func viewDidLoad()
  {
    super.viewDidLoad()
    addingEvent()
  }
  
  // MARK: - Event handling
  
  func addingEvent() {
    let viewTapGesture = UITapGestureRecognizer(target: self, action: #selector(viewTapped))
    view.addGestureRecognizer(viewTapGesture)
  }
  
  func viewTapped() {
    view.endEditing(true)
  }
  
  @IBAction func loginTouchupInside(_ sender: Any) {
    // NOTE: Ask the Interactor to do some work
    let request = Login.FetchUser.Request(
      password: passwordField.text,
      email: emailField.text
    )
    output.login(request: request)
  }
  // MARK: - Display logic
  
  func displayFetchedUser(viewModel: Login.FetchUser.ViewModel)
  {
    if viewModel.isSuccess {
      router.navigateToTab()
    } else {
      Alert.showError(viewController: self, message: viewModel.errorMessage ?? "")
    }
  }
}

